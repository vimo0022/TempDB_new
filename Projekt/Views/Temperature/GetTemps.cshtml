@model IEnumerable<Projekt.Models.TemperatureDetaljer>

@{
    ViewData["Title"] = "Temperaturer";
}

<h2>@ViewData["Title"]</h2>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<table class="table">
    <thead>
        <tr>
            <th>Temperatur</th>
            <th>Tidpunkt</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Temperature)</td>
                <td>@Html.DisplayFor(modelItem => item.MeasurementTime)</td>
            </tr>
        }
    </tbody>
</table>



<canvas id="temperatureChart" width="800" height="400"></canvas>

<script>
    var allTempData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Temperature)));
    var allLabels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.MeasurementTime.ToString("yyyy-MM-dd HH:mm"))));

    var ctx = document.getElementById('temperatureChart').getContext('2d');
    var temperatureChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: allLabels,
            datasets: [{
                label: 'Temperatur över tid',
                data: allTempData,
                fill: false,
                borderColor: 'rgb(75, 192, 192)',
                tension: 0.1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: false
                }
            }
        }
    });

    document.getElementById('updateChartButton').addEventListener('click', updateChart);


    function updateChart() {
        var selectedNum = document.getElementById('numPoints').value;
        var filteredData, filteredLabels;

        if (selectedNum === "Alla") {
            filteredData = allTempData;
            filteredLabels = allLabels;
        } else {
            var numPoints = parseInt(selectedNum);
            filteredData = allTempData.slice(Math.max(allTempData.length - numPoints, 0));
            filteredLabels = allLabels.slice(Math.max(allLabels.length - numPoints, 0));
        }

  
        temperatureChart.data.labels = [];
        temperatureChart.data.datasets.forEach((dataset) => {
            dataset.data = [];
        });


        temperatureChart.data.labels = filteredLabels;
        temperatureChart.data.datasets.forEach((dataset) => {
            dataset.data = filteredData;
        });

        temperatureChart.update();
    }

 
    updateChart();
</script>
